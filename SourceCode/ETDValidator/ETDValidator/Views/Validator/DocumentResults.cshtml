@{
    ViewData["Title"] = "Uploader";
}
@using System.Globalization
@model DocumentResultsViewModel

<link rel="stylesheet" href="~/css/upload-page.css">
<link rel="stylesheet" href="~/css/result-page.css">
<script>
// load JSON passed from backend in DocumentResultsViewModel
// since we're accessing the view model, this needs to be done in the view file
function retrieveJson() {
    var jsonString = JSON.parse('@Model.JsonString'.replace(/&quot;/g, '\"'));
    
    // function for building
    buildValidationUI(jsonString);
}
retrieveJson();
</script>


<div class="text-center">
    <h1 class="display-4">ETD Uploader</h1>
    <p>Showing the results for uploaded file: (Validation completed: @DateTime.Now.ToString(CultureInfo.InvariantCulture))</p>
</div>

<div class="validation-results-container" id="errors">
    <div class="result-numbering">
    <p class="error-name result-name"> warning name </p>
        <p class="result-descriptions">
            This is just an example place holder that will be filled with correct description.
            For details, consult link:
        </p>
    </div>    
</div>
    
<div class="validation-results-container" id="warnings">
    <div class="result-numbering">
        <p class="warning-name result-name"> warning name </p>
        <p class="result-descriptions">
            This is just an example place holder that will be filled with correct description.
            For details, consult link:
        </p>
    </div>
</div>

<div class="validation-results-container" >
    <p class="result-descriptions" id="valid-document">
        Document checking completed. No errors or warnings to show.
    </p>
</div>


<script src="~/js/results-page.js"></script>